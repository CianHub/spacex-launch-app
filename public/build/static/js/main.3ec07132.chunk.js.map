{"version":3,"sources":["components/launch-item.tsx","components/mission-key.tsx","components/launches.tsx","components/launch-details-item.tsx","components/launch.tsx","components/logo.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LaunchItem","launch","console","log","links","className","classNames","launch_success","mission_name","mission_patch_small","src","alt","format","launch_date_local","to","flight_number","MissionKey","LAUNCHES_QUERY","gql","Launches","useQuery","loading","error","data","Fragment","launches","map","item","key","contentHandler","LaunchDetailsItem","launch_year","rocket","id","rocket_name","rocket_type","LAUNCH_QUERY","LaunchDetails","props","match","params","flightNumber","parseInt","variables","skip","Logo","version","xmlns","xmlnsXlink","x","y","width","height","viewBox","enableBackground","xmlSpace","fill","d","points","client","ApolloClient","uri","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3ec07132.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport Moment from 'react-moment';\nimport { Link } from 'react-router-dom';\n\nimport { Launch } from '../models/launch.model';\n\nexport default function LaunchItem({\n  launch,\n}: {\n  launch: Launch;\n}): JSX.Element {\n  console.log(launch.links);\n  return (\n    <div className=\"card card-body mb-3 mission-grid-item\">\n      <div className=\"\">\n        <div className=\"\">\n          <p className=\"h5\">\n            Mission:\n            <span\n              className={classNames(\n                { 'text-success': launch.launch_success },\n                { 'text-danger': launch.launch_success === false },\n                { 'text-primary': launch.launch_success === null }\n              )}\n            >\n              {' '}\n              {launch?.mission_name}\n              {launch?.links?.mission_patch_small ? (\n                <img\n                  className={classNames(\n                    { 'img-fluid mb-3 mission-item-patch': true },\n                    { 'margin-left': true }\n                  )}\n                  src={launch?.links?.mission_patch_small}\n                  alt=\"The patch awarded for the mission\"\n                />\n              ) : null}\n            </span>\n          </p>\n          <p>\n            Date:{' '}\n            <Moment format=\"DD/MM/YYYY\">{launch?.launch_date_local}</Moment>\n          </p>\n        </div>\n      </div>\n\n      <div className=\"\">\n        <Link\n          to={`/launch/${launch?.flight_number}`}\n          className=\"btn btn-secondary mission-item-details-btn\"\n        >\n          Launch Details\n        </Link>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function MissionKey() {\n  return (\n    <div className=\"my-3\">\n      <p>\n        <span className=\"px-3 mr-2 bg-success\" /> = Success\n      </p>\n      <p>\n        <span className=\"px-3 mr-2 bg-danger\" /> = Failure\n      </p>\n      <p>\n        <span className=\"px-3 mr-2 bg-primary\" /> = Pending\n      </p>\n    </div>\n  );\n}\n","import React from 'react';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport { Launch } from '../models/launch.model';\nimport LaunchItem from './launch-item';\nimport MissionKey from './mission-key';\n\nconst LAUNCHES_QUERY = gql`\n  query LaunchesQuery {\n    launches {\n      flight_number\n      mission_name\n      launch_year\n      launch_date_local\n      launch_success\n      rocket {\n        id\n        rocket_name\n        rocket_type\n      }\n      links {\n        mission_patch_small\n      }\n    }\n  }\n`;\n\nexport function Launches() {\n  const { loading, error, data } = useQuery(LAUNCHES_QUERY);\n\n  const contentHandler = (): JSX.Element | undefined => {\n    if (loading) return <h4>Loading...</h4>;\n    else if (error) console.log(error);\n    else {\n      if (data) {\n        return (\n          <div className=\"mission-grid\">\n            {data.launches.map((item: Launch) => {\n              return (\n                <LaunchItem key={item.flight_number} launch={item}></LaunchItem>\n              );\n            })}\n          </div>\n        );\n      }\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <h5 className=\"display-4 my-3\">Launches</h5>\n      <MissionKey></MissionKey>\n      {contentHandler()}\n    </React.Fragment>\n  );\n}\n\nexport default Launches;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\n\nimport { Launch } from '../models/launch.model';\n\nexport default function LaunchDetailsItem({\n  launch,\n}: {\n  launch: Launch;\n}): JSX.Element {\n  return (\n    <div className=\"mission-launch-details mb-3\">\n      <div className=\"mission-launch-heading\">\n        <p className=\"h4 display-5\">\n          <span className=\"text-dark\">Mission: {launch.mission_name}</span>\n        </p>\n        <hr />\n      </div>\n      <div className=\"mission-launch-body\">\n        <div className=\"launch-details\">\n          {' '}\n          <h5>Launch Details</h5>\n          <ul className=\"list-group\">\n            <li className=\"list-group-item\">\n              Flight Number: {launch.flight_number}\n            </li>\n            <li className=\"list-group-item\">\n              Launch Year: {launch.launch_year}\n            </li>\n            <li className=\"list-group-item\">\n              Launch Success:{' '}\n              <span\n                className={classNames(\n                  {\n                    'text-success': launch.launch_success,\n                  },\n                  {\n                    'text-danger': !launch.launch_success,\n                  }\n                )}\n              >\n                {launch.launch_success ? 'Yes' : 'No'}\n              </span>\n            </li>\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"rocket-details\">\n        <h5>Rocket Details</h5>\n        <ul className=\"list-group\">\n          <li className=\"list-group-item\">\n            Rocket ID: {launch.rocket.id ? launch.rocket.id : 'N/A'}{' '}\n          </li>\n          <li className=\"list-group-item\">\n            Rocket Name: {launch.rocket.rocket_name}{' '}\n          </li>\n          <li className=\"list-group-item\">\n            Rocket Type: {launch.rocket.rocket_type}{' '}\n          </li>\n        </ul>\n      </div>\n      <hr />\n      <Link to=\"/\" className=\"btn btn-secondary\">\n        Back\n      </Link>\n    </div>\n  );\n}\n","import React from 'react';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport LaunchDetailsItem from './launch-details-item';\n\nconst LAUNCH_QUERY = gql`\n  query LaunchQuery($flight_number: Int!) {\n    launch(flight_number: $flight_number) {\n      flight_number\n      mission_name\n      launch_year\n      launch_date_local\n      launch_success\n      rocket {\n        id\n        rocket_name\n        rocket_type\n      }\n      links {\n        mission_patch_small\n      }\n    }\n  }\n`;\n\nexport default function LaunchDetails(props: any) {\n  let flight_number = props.match.params.flightNumber;\n  flight_number = flight_number ? parseInt(flight_number) : null;\n\n  let { loading, error, data } = useQuery(LAUNCH_QUERY, {\n    variables: { flight_number },\n    skip: !flight_number,\n  });\n\n  data = data?.launch;\n\n  const contentHandler = (): JSX.Element | undefined => {\n    if (loading) return <h4>Loading...</h4>;\n    else if (error) console.log(error);\n    else {\n      if (data) {\n        return (\n          <div className=\"mission-grid\">\n            <LaunchDetailsItem\n              key={data?.flight_number}\n              launch={data}\n            ></LaunchDetailsItem>\n          </div>\n        );\n      }\n    }\n  };\n\n  return <React.Fragment>{contentHandler()}</React.Fragment>;\n}\n","import React from 'react';\n\nexport default function Logo(): JSX.Element {\n  return (\n    <svg\n      version=\"1.1\"\n      id=\"Layer_1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      x=\"0px\"\n      y=\"0px\"\n      width=\"331.644px\"\n      height=\"40.825px\"\n      viewBox=\"0 0 331.644 40.825\"\n      enableBackground=\"new 0 0 331.644 40.825\"\n      xmlSpace=\"preserve\"\n    >\n      <g>\n        <path\n          fill=\"#ffffff\"\n          d=\"M77.292,15.094H49.249l-1.039,0.777v24.947h7.763v-9.355l0.741-0.664h20.579   c5.196,0,7.632-1.398,7.632-4.985v-5.728C84.924,16.493,82.489,15.094,77.292,15.094 M77.292,24.317   c0,1.69-1.118,2.041-3.554,2.041H56.799l-0.827-0.804V20.21l0.741-0.678h17.025c2.436,0,3.554,0.347,3.554,2.045V24.317z\"\n        />\n        <polyline\n          fill=\"#ffffff\"\n          points=\"99.081,19.813 105.761,29.6 105.391,30.548 90.618,30.548 86.847,35.187 108.837,35.187 110.361,36.115 113.775,40.824 122.659,40.824 103.186,14.775\"\n        />\n        <polyline\n          fill=\"#ffffff\"\n          points=\"187.418,35.757 187.418,28.833 188.217,28.143 203.079,28.143 203.079,23.734 179.524,23.734 179.524,40.823 214.27,40.823 214.27,36.435 188.252,36.435\"\n        />\n        <rect\n          x=\"179.524\"\n          y=\"15.094\"\n          fill=\"#ffffff\"\n          width=\"35.113\"\n          height=\"4.848\"\n        />\n        <path\n          fill=\"#ffffff\"\n          d=\"M140.361,19.685h28.288c-0.436-3.597-2.668-4.595-8.33-4.595H140.06c-6.389,0-8.427,1.247-8.427,6.082   v13.565c0,4.84,2.038,6.087,8.427,6.087h20.259c5.745,0,7.945-1.079,8.095-4.81h-28.053l-0.832-0.783V20.209\"\n        />\n        <path\n          fill=\"#ffffff\"\n          d=\"M29.333,25.118H8.754l-0.606-0.667v-4.402l0.603-0.466h27.742l0.379-0.927   c-0.945-2.431-3.392-3.565-7.936-3.565H9.665c-6.385,0-8.426,1.247-8.426,6.082v2.844c0,4.841,2.041,6.086,8.426,6.086h20.533   l0.645,0.566v4.602l-0.526,0.718H6.83v-0.022H0.678c0,0-0.704,0.353-0.677,0.518c0.525,3.382,2.829,4.34,8.345,4.34h20.987   c6.384,0,8.486-1.247,8.486-6.087v-3.543C37.819,26.363,35.717,25.118,29.333,25.118\"\n        />\n        <path\n          fill=\"#ffffff\"\n          d=\"M236.725,14.988h-11.551l-0.627,1.193l12.828,9.351c2.43-1.407,5.074-2.833,7.95-4.24\"\n        />\n        <path\n          fill=\"#ffffff\"\n          d=\"M247.075,32.603l11.275,8.222h11.692l0.484-1.089L253.69,27.413   C251.454,29.054,249.245,30.787,247.075,32.603\"\n        />\n        <path\n          fill=\"#A7A9AC\"\n          d=\"M235.006,40.806h-10.451l-0.883-1.383C230.778,32.562,262.56,3.151,331.644,0   C331.644,0,273.658,1.956,235.006,40.806\"\n        />\n      </g>\n    </svg>\n  );\n}\n","import React from 'react';\nimport Launches from './components/launches';\nimport LaunchDetails from './components/launch';\n\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Logo from './components/logo';\nimport { Link } from 'react-router-dom';\n\nimport './App.css';\n\nconst client = new ApolloClient({ uri: '/graphql' });\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"container\">\n          <div className=\"logo\">\n            <Link to={`/`}>\n              <Logo></Logo>\n            </Link>\n          </div>\n          <Route exact path=\"/\" component={Launches}></Route>\n          <Route\n            exact\n            path=\"/launch/:flightNumber\"\n            component={LaunchDetails}\n          ></Route>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}